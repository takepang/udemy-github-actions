name: backend

on:
  push:
    branches:
      - main
    # backend、.githubディレクトリに変更があった場合にトリガーとしてパイプライン実行
    paths:
      - 'backend/**'
      - '.github/**'

  schedule:
    # 日本時間で毎晩 21時(UTC)
    - cron: '0 12 * * *'

# ワークディレクトリをbackendに設定
defaults:
  run:
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Git checkout
      - uses: actions/checkout@v3
      # セットアップ
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      # パッケージの依存関係をインストール
      - run: npm ci
      # テスト実行
      - run: npm run test -- --coverage
      # ビルド実行
      - run: npm run build
      # nodejs 実行
      - run: node dist/index.js &
      - run: npx wait-on -t 10000 http://localhost:8080/api/health
      # テストAPI実行
      - run: npm run test:api

      # テスト結果をアーティファクトに保存
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: backend/coverage/**
          retention-days: 5
      # ビルド成果物をアーティファクトに保存
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: backend/dist/index.js
          retention-days: 5

  # デプロイジョブ
  deploy:
    # buildジョブ成功後に実行
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      # ビルド成果物をアーティファクトからダウンロード
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: backend/dist

      # SSH鍵の設定
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BACKEND_SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.BACKEND_SERVER_KNOWN_HOSTS }}

      # ソースファイル転送
      - run: rsync -v dist/index.js ${SERVER_USER}@${SERVER_IP}:~/index.js
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
          
      # サービス再起動
      - run: ssh ${SERVER_USER}@${SERVER_IP} sudo systemctl restart backend.service
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
          
      # サービス起動確認
      - run: ssh ${SERVER_USER}@${SERVER_IP} sudo systemctl status backend.service
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}